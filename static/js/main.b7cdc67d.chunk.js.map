{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setType","isReversed","setReverse","isStarted","setStarted","newGoods","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","curr","map","good","nanoid","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,2DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2BE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAkBC,EAAlB,KACMC,EAzBR,SACEC,EACAP,EACAE,GAEA,IAAMM,EAAY,YAAOD,GAEzB,OAAQP,GACN,KAAKL,EAASc,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAM7C,OAAOb,EAAaM,EAAaQ,UAAYR,EAO5BS,CACfrB,EACAI,EACAE,GAGF,OACE,sBAAKgB,UAAU,YAAf,WACId,GACA,wBACEe,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPf,GAAW,IAJf,mBAUDD,GACC,qCACE,wBACEe,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPnB,EAAQN,EAASc,UAJrB,iCAUA,wBACEU,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPnB,EAAQN,EAASmB,SAJrB,4BAUA,wBACEK,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPjB,GAAW,SAAAkB,GAAI,OAAKA,MAJxB,qBAUA,wBACEF,KAAK,SACLD,UAAU,mBACVE,QAAS,WACPnB,EAAQN,EAASI,MACjBI,GAAW,IALf,mBAWA,oBAAIe,UAAU,QAAd,SACGZ,EAASgB,KAAI,SAAAC,GAAI,OAChB,oBAAIL,UAAU,cAAd,SAA4CK,GAAXC,2BC9G/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7cdc67d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n  const [isStarted, setStarted] = useState(false);\n  const newGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App panel\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success\"\n          onClick={() => {\n            setStarted(true);\n          }}\n        >\n          Start\n        </button>\n      )}\n      {isStarted && (\n        <>\n          <button\n            type=\"button\"\n            className=\"button is-success\"\n            onClick={() => {\n              setType(SortType.ALPABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success\"\n            onClick={() => {\n              setType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={() => {\n              setReverse(curr => !curr);\n            }}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={() => {\n              setType(SortType.NONE);\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {newGoods.map(good => (\n              <li className=\"Goods__item\" key={nanoid()}>{good}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}